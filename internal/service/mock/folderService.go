// Code generated by MockGen. DO NOT EDIT.
// Source: folderService.go

// Package mock is a generated GoMock package.
package mock

import (
	model "Notes/internal/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAbstractFolderService is a mock of AbstractFolderService interface.
type MockAbstractFolderService struct {
	ctrl     *gomock.Controller
	recorder *MockAbstractFolderServiceMockRecorder
}

// MockAbstractFolderServiceMockRecorder is the mock recorder for MockAbstractFolderService.
type MockAbstractFolderServiceMockRecorder struct {
	mock *MockAbstractFolderService
}

// NewMockAbstractFolderService creates a new mock instance.
func NewMockAbstractFolderService(ctrl *gomock.Controller) *MockAbstractFolderService {
	mock := &MockAbstractFolderService{ctrl: ctrl}
	mock.recorder = &MockAbstractFolderServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAbstractFolderService) EXPECT() *MockAbstractFolderServiceMockRecorder {
	return m.recorder
}

// CreateFolder mocks base method.
func (m *MockAbstractFolderService) CreateFolder(userId int, title string) (int, *model.ApplicationError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFolder", userId, title)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(*model.ApplicationError)
	return ret0, ret1
}

// CreateFolder indicates an expected call of CreateFolder.
func (mr *MockAbstractFolderServiceMockRecorder) CreateFolder(userId, title interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFolder", reflect.TypeOf((*MockAbstractFolderService)(nil).CreateFolder), userId, title)
}

// DeleteFolder mocks base method.
func (m *MockAbstractFolderService) DeleteFolder(userId, folderId int) *model.ApplicationError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteFolder", userId, folderId)
	ret0, _ := ret[0].(*model.ApplicationError)
	return ret0
}

// DeleteFolder indicates an expected call of DeleteFolder.
func (mr *MockAbstractFolderServiceMockRecorder) DeleteFolder(userId, folderId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFolder", reflect.TypeOf((*MockAbstractFolderService)(nil).DeleteFolder), userId, folderId)
}

// UpdateFolder mocks base method.
func (m *MockAbstractFolderService) UpdateFolder(userId, folderId int, title string) *model.ApplicationError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateFolder", userId, folderId, title)
	ret0, _ := ret[0].(*model.ApplicationError)
	return ret0
}

// UpdateFolder indicates an expected call of UpdateFolder.
func (mr *MockAbstractFolderServiceMockRecorder) UpdateFolder(userId, folderId, title interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateFolder", reflect.TypeOf((*MockAbstractFolderService)(nil).UpdateFolder), userId, folderId, title)
}
