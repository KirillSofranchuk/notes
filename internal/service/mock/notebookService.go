// Code generated by MockGen. DO NOT EDIT.
// Source: notebookService.go

// Package mock is a generated GoMock package.
package mock

import (
	model "Notes/internal/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAbstractNotebookService is a mock of AbstractNotebookService interface.
type MockAbstractNotebookService struct {
	ctrl     *gomock.Controller
	recorder *MockAbstractNotebookServiceMockRecorder
}

// MockAbstractNotebookServiceMockRecorder is the mock recorder for MockAbstractNotebookService.
type MockAbstractNotebookServiceMockRecorder struct {
	mock *MockAbstractNotebookService
}

// NewMockAbstractNotebookService creates a new mock instance.
func NewMockAbstractNotebookService(ctrl *gomock.Controller) *MockAbstractNotebookService {
	mock := &MockAbstractNotebookService{ctrl: ctrl}
	mock.recorder = &MockAbstractNotebookServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAbstractNotebookService) EXPECT() *MockAbstractNotebookServiceMockRecorder {
	return m.recorder
}

// GetUserNotebook mocks base method.
func (m *MockAbstractNotebookService) GetUserNotebook(userId int) model.Notebook {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserNotebook", userId)
	ret0, _ := ret[0].(model.Notebook)
	return ret0
}

// GetUserNotebook indicates an expected call of GetUserNotebook.
func (mr *MockAbstractNotebookServiceMockRecorder) GetUserNotebook(userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserNotebook", reflect.TypeOf((*MockAbstractNotebookService)(nil).GetUserNotebook), userId)
}
